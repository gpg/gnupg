#!/bin/sh
# mkerrtok - Create error tokens from errors.h
#            and the C source for gnupg_errortoken
#	Copyright (C) 2001, 2002 Free Software Foundation, Inc.
#
# This file is part of GnuPG.
#
# GnuPG is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# GnuPG is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.

cat <<EOF
/* Generated automatically by mkerrtok */
/* Do not edit! */

/**
 * gnupg_error_token:
 * @err:  Error code
 *
 * This function returns a textual representation of the given
 * errorcode. If this is an unknown value, a static string is returned.
 * This function differs from gnupg_strerror that it yields the string
 * representation of the macro which is never subject to i18n.
 *
 * Return value: String with the error token.
 **/
const char *
gnupg_error_token (int err)
{
  const char *s;

  switch (err)
    {
EOF

awk '
/GNUPG_No_Error/  { okay=1 }
!okay              {next}
/}/                { exit 0 }
/GNUPG_[A-Za-z_]*/ { print_code($1) }


function print_code( s )
{
printf "    case %s: s=\"", s ;
printf "%s\"; break;\n", substr(s,7);
}
'

cat <<EOF
    default:  s = "Unknown_Error"; break;
    }

  return s;
}

EOF
